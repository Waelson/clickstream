version: '2'
services:
  schema-registry-ui:
    image: landoop/schema-registry-ui:0.9.5
    ports:
      - "8086:8086"
    environment:
      PORT: "8086"
      PROXY: "true"
      SCHEMAREGISTRY_URL: "http://schema-registry:8081/"
    depends_on:
      - schema-registry


  connect-ui:
    image: landoop/kafka-connect-ui:0.9.7
    ports:
      - "8084:8084"
    environment:
      PORT: "8084"
      PROXY: "true"
      CONNECT_URL: "http://kafka-connect:8083"
    depends_on:
      - "kafka-connect"


  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka:9092"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: "1"
    depends_on:
      - kafka

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: user_metrics
      POSTGRES_PASSWORD: password_metrics
      POSTGRES_DB: db_metrics
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.5.0
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_PORT: 8083
      CONNECT_LISTENERS: "http://0.0.0.0:8083"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_GROUP_ID: "kafka-connect-group"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-config"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offset"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: "/usr/share/java"
    volumes:
      - ./libs/postgresql-42.7.4.jar:/usr/share/java/kafka/postgresql-42.7.4.jar
      - ./libs/kafka-connect-jdbc-10.8.0.jar:/usr/share/java/kafka-connect-jdbc-10.8.0.jar
    depends_on:
      - kafka
      - postgres
      - schema-registry

  items-frontend:
    build:
      context: items/items-frontend
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    depends_on:
      - items-api

  items-api:
    build:
      context: items/items-api
      dockerfile: Dockerfile
    ports:
      - '8079:8079'
    depends_on:
      - clickstream-api
    environment:
      URL_CS_API: "http://clickstream-api:8082"


  clickstream-api:
    build:
      context: ./clickstream/clickstream-api
      dockerfile: Dockerfile
    ports:
      - '8082:8082'
    depends_on:
      - ksql
    environment:
      URL_KAFKA: "kafka:9092"

  ksql:
    image:  confluentinc/ksqldb-server:latest
    ports:
      - '8088:8088'
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088/
      KSQL_KSQL_SERVICE_ID: ksql_service_2
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081/"
    depends_on:
      - kafka
      - schema-registry

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - '32181:32181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    extra_hosts:
      - "moby:127.0.0.1"

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - '2181:2181'
      - '9092:9092'
      - '29092:29092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    extra_hosts:
      - "moby:127.0.0.1"

  grafana:
    image: grafana/grafana
    depends_on:
      - kafka
      - ksql
      - zookeeper
    ports:
      - "3000:3000"

volumes:
  postgres_data:
    driver: local